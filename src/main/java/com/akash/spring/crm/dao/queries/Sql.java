package com.akash.spring.crm.dao.queries;

/**
 * Created by Akash Agarwal on 5/3/2016.
 */
public interface Sql {

    String getSql();

    public static enum Customer implements Sql {

        CREATE_TABLE("CREATE TABLE CUSTOMER(CUSTOMER_ID VARCHAR(20), COMPANY_NAME VARCHAR(50), EMAIL VARCHAR(50), TELEPHONE VARCHAR(20), NOTES VARCHAR(255))"),
        CREATE_CALL_TABLE("CREATE TABLE TBL_CALL(NOTES VARCHAR(255), TIME_AND_DATE DATE, CUSTOMER_ID VARCHAR(20))"),
        INSERT("INSERT INTO CUSTOMER (CUSTOMER_ID, COMPANY_NAME, EMAIL, TELEPHONE, NOTES) VALUES (?,?,?,?,?)"),
        UPDATE("UPDATE CUSTOMER SET COMPANY_NAME=?, EMAIL=?, TELEPHONE=?, NOTES=? WHERE CUSTOMER_ID = ?"),
        DELETE("DELETE FROM CUSTOMER WHERE CUSTOMER_ID = ?"),
        FINDBY_COMPANY_NAME("SELECT * FROM CUSTOMER WHERE COMPANY_NAME = ?"),
        CUSTOMER_CALLS("SELECT * FROM TBL_CALL WHERE CUSTOMER_ID=?"),
        ADD_CALL("INSERT INTO TBL_CALL(NOTES, TIME_AND_DATE, CUSTOMER_ID) VALUES (?, ?, ?)"),
        FINDBY_ID("SELECT * FROM CUSTOMER WHERE CUSTOMER_ID = ?"),
        FINDALL("SELECT * FROM CUSTOMER");

        private String sql;

        private Customer(String sql) {
            this.sql = sql;
        }

        public String getSql() {
            return this.sql;
        }
    }

    public static enum Action implements Sql {
        CREATE_TABLE("CREATE TABLE ACTION (ACTION_ID integer generated by default as identity (start with 1), DETAILS VARCHAR(255), COMPLETE BOOLEAN, OWNING_USER VARCHAR(20), REQUIRED_BY DATE)"),
        DELETE("DELETE FROM ACTION WHERE ACTION_ID=?"),
        UPDATE("UPDATE ACTION SET DETAILS=?, COMPLETE=?, OWNING_USER=?, REQUIRED_BY=? WHERE ACTION_ID=?"),
        INCOMPLETE("SELECT ACTION_ID, DETAILS, COMPLETE, OWNING_USER, REQUIRED_BY FROM ACTION WHERE OWNING_USER=? AND COMPLETE=?"),
        INSERT("INSERT INTO ACTION (DETAILS, COMPLETE, OWNING_USER, REQUIRED_BY) VALUES (?,?,?,?)");

        private String sql;

        private Action(String sql) {
            this.sql = sql;
        }

        public String getSql() {
            return this.sql;
        }
    }
}
